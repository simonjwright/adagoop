ACTIONS.ADB     55        SCCS_ID : constant String := "@(#) actions_file_body.ada, Version 1.2";
ACTIONS.ADB     60          Maximum_Action_Length : constant Count  := 2000; 
ASTRINGS.ADS    13              Empty : constant A_String := new string_rec(0);
ASTRINGS.ADS    15              to_upper: constant convert_t := (
ASTRINGS.ADS    36              to_lower: constant convert_t := (
AYACCFN.ADB     9         SCCS_ID : constant String := "@(#) file_names.ada, Version 1.2";
AYACCFN.ADB     13        Rcs_ID : constant String := "$Header: /cf/ua/arcadia/alex-ayacc/ayacc/src/RCS/file_names.a,v 1.2 88/11/28 13:38:59 arcadia Exp $";
AYACCFN.ADB     15          Max_Name_Length : constant := 50;
AYACCFN.ADB     51          Filename_Without_Extension : constant String :=
AYACCFN.ADB     101         Filename : constant String := Value_of (Upper_Case (C_Lex_File_Name));
AYACCFN.ADB     108         Filename : constant String := Value_of (Upper_Case (Goto_File_Name));
AYACCFN.ADB     115         Filename : constant String := Value_of (Upper_Case (Shift_Reduce_File_Name));
AYACCFN.ADB     122         Filename : constant String := Value_of (Upper_Case (Tokens_File_Name));
AYACCFN.ADB     129         Filename : constant String := Value_of (Upper_Case (Error_Report_File_Name));
B~SCAY~1.ADB    21            E086 : Boolean; pragma Import (Ada, E086, "ada__strings__maps__constants_E");
B~SCAY~1.ADB    58            Restrictions : constant String :=
B~SCAY~1.ADS    15         GNAT_Version : constant String :=
B~SCAY~1.ADS    19         Ada_Main_Program_Name : constant String := "_ada_scayacc" & Ascii.NUL;
B~SCAY~1.ADS    39         u00001 : constant Version_32 := 16#38b7031d#;
B~SCAY~1.ADS    40         u00002 : constant Version_32 := 16#612a2371#;
B~SCAY~1.ADS    41         u00003 : constant Version_32 := 16#6d0b25e7#;
B~SCAY~1.ADS    42         u00004 : constant Version_32 := 16#3135932a#;
B~SCAY~1.ADS    43         u00005 : constant Version_32 := 16#5097162c#;
B~SCAY~1.ADS    44         u00006 : constant Version_32 := 16#a0108083#;
B~SCAY~1.ADS    45         u00007 : constant Version_32 := 16#6380ea48#;
B~SCAY~1.ADS    46         u00008 : constant Version_32 := 16#c5fbb2c4#;
B~SCAY~1.ADS    47         u00009 : constant Version_32 := 16#dc301c49#;
B~SCAY~1.ADS    48         u00010 : constant Version_32 := 16#2f3d0cfb#;
B~SCAY~1.ADS    49         u00011 : constant Version_32 := 16#58c090c8#;
B~SCAY~1.ADS    50         u00012 : constant Version_32 := 16#0bbec219#;
B~SCAY~1.ADS    51         u00013 : constant Version_32 := 16#2c01a59d#;
B~SCAY~1.ADS    52         u00014 : constant Version_32 := 16#eb251ef2#;
B~SCAY~1.ADS    53         u00015 : constant Version_32 := 16#bbfe2e15#;
B~SCAY~1.ADS    54         u00016 : constant Version_32 := 16#aafe6ddd#;
B~SCAY~1.ADS    55         u00017 : constant Version_32 := 16#15ecf685#;
B~SCAY~1.ADS    56         u00018 : constant Version_32 := 16#deb56e68#;
B~SCAY~1.ADS    57         u00019 : constant Version_32 := 16#5b831103#;
B~SCAY~1.ADS    58         u00020 : constant Version_32 := 16#22cfda4b#;
B~SCAY~1.ADS    59         u00021 : constant Version_32 := 16#85d0fac3#;
B~SCAY~1.ADS    60         u00022 : constant Version_32 := 16#1d36b7a3#;
B~SCAY~1.ADS    61         u00023 : constant Version_32 := 16#e1ec3288#;
B~SCAY~1.ADS    62         u00024 : constant Version_32 := 16#1e6071ed#;
B~SCAY~1.ADS    63         u00025 : constant Version_32 := 16#7e6eaca1#;
B~SCAY~1.ADS    64         u00026 : constant Version_32 := 16#0a072375#;
B~SCAY~1.ADS    65         u00027 : constant Version_32 := 16#a4e49d90#;
B~SCAY~1.ADS    66         u00028 : constant Version_32 := 16#e983fc56#;
B~SCAY~1.ADS    67         u00029 : constant Version_32 := 16#9a0b3df4#;
B~SCAY~1.ADS    68         u00030 : constant Version_32 := 16#664672fc#;
B~SCAY~1.ADS    69         u00031 : constant Version_32 := 16#4d4e8ee2#;
B~SCAY~1.ADS    70         u00032 : constant Version_32 := 16#19703964#;
B~SCAY~1.ADS    71         u00033 : constant Version_32 := 16#63578f5d#;
B~SCAY~1.ADS    72         u00034 : constant Version_32 := 16#4d513094#;
B~SCAY~1.ADS    73         u00035 : constant Version_32 := 16#1f177839#;
B~SCAY~1.ADS    74         u00036 : constant Version_32 := 16#01a91969#;
B~SCAY~1.ADS    75         u00037 : constant Version_32 := 16#6e859da6#;
B~SCAY~1.ADS    76         u00038 : constant Version_32 := 16#7db1a6b5#;
B~SCAY~1.ADS    77         u00039 : constant Version_32 := 16#f35c6b46#;
B~SCAY~1.ADS    78         u00040 : constant Version_32 := 16#e444d66b#;
B~SCAY~1.ADS    79         u00041 : constant Version_32 := 16#c13c6026#;
B~SCAY~1.ADS    80         u00042 : constant Version_32 := 16#ceb73570#;
B~SCAY~1.ADS    81         u00043 : constant Version_32 := 16#f4cf0f70#;
B~SCAY~1.ADS    82         u00044 : constant Version_32 := 16#cf0ab27e#;
B~SCAY~1.ADS    83         u00045 : constant Version_32 := 16#320a65fb#;
B~SCAY~1.ADS    84         u00046 : constant Version_32 := 16#9d5e2b8a#;
B~SCAY~1.ADS    85         u00047 : constant Version_32 := 16#d461359f#;
B~SCAY~1.ADS    86         u00048 : constant Version_32 := 16#021e4da0#;
B~SCAY~1.ADS    87         u00049 : constant Version_32 := 16#2a4e834a#;
B~SCAY~1.ADS    88         u00050 : constant Version_32 := 16#559e98dd#;
B~SCAY~1.ADS    89         u00051 : constant Version_32 := 16#d8088025#;
B~SCAY~1.ADS    90         u00052 : constant Version_32 := 16#5191bd63#;
B~SCAY~1.ADS    91         u00053 : constant Version_32 := 16#0d73f03e#;
B~SCAY~1.ADS    92         u00054 : constant Version_32 := 16#7bf62c37#;
B~SCAY~1.ADS    93         u00055 : constant Version_32 := 16#4475095f#;
B~SCAY~1.ADS    94         u00056 : constant Version_32 := 16#f5ea57bc#;
B~SCAY~1.ADS    95         u00057 : constant Version_32 := 16#83609014#;
B~SCAY~1.ADS    96         u00058 : constant Version_32 := 16#139120f0#;
B~SCAY~1.ADS    97         u00059 : constant Version_32 := 16#67de7468#;
B~SCAY~1.ADS    98         u00060 : constant Version_32 := 16#656bf107#;
B~SCAY~1.ADS    99         u00061 : constant Version_32 := 16#dec8b4cc#;
B~SCAY~1.ADS    100        u00062 : constant Version_32 := 16#0af0a97f#;
B~SCAY~1.ADS    101        u00063 : constant Version_32 := 16#2707dc21#;
B~SCAY~1.ADS    102        u00064 : constant Version_32 := 16#8a85a734#;
B~SCAY~1.ADS    103        u00065 : constant Version_32 := 16#b2e77bbf#;
B~SCAY~1.ADS    104        u00066 : constant Version_32 := 16#be06a09e#;
B~SCAY~1.ADS    105        u00067 : constant Version_32 := 16#de189fd2#;
B~SCAY~1.ADS    106        u00068 : constant Version_32 := 16#41941407#;
B~SCAY~1.ADS    107        u00069 : constant Version_32 := 16#753e9209#;
B~SCAY~1.ADS    108        u00070 : constant Version_32 := 16#2a903bc9#;
B~SCAY~1.ADS    109        u00071 : constant Version_32 := 16#acd3010b#;
B~SCAY~1.ADS    110        u00072 : constant Version_32 := 16#ffad3e68#;
B~SCAY~1.ADS    111        u00073 : constant Version_32 := 16#29e5afbc#;
B~SCAY~1.ADS    112        u00074 : constant Version_32 := 16#371c37e6#;
B~SCAY~1.ADS    113        u00075 : constant Version_32 := 16#38a5248d#;
B~SCAY~1.ADS    114        u00076 : constant Version_32 := 16#060f352a#;
B~SCAY~1.ADS    115        u00077 : constant Version_32 := 16#f6447ab9#;
B~SCAY~1.ADS    116        u00078 : constant Version_32 := 16#46d230ec#;
B~SCAY~1.ADS    117        u00079 : constant Version_32 := 16#a0be30a8#;
B~SCAY~1.ADS    118        u00080 : constant Version_32 := 16#c4504387#;
B~SCAY~1.ADS    119        u00081 : constant Version_32 := 16#7f70d6fb#;
B~SCAY~1.ADS    120        u00082 : constant Version_32 := 16#841ddc3f#;
B~SCAY~1.ADS    121        u00083 : constant Version_32 := 16#c77bedf5#;
B~SCAY~1.ADS    122        u00084 : constant Version_32 := 16#0c033dfd#;
B~SCAY~1.ADS    123        u00085 : constant Version_32 := 16#350327a4#;
B~SCAY~1.ADS    124        u00086 : constant Version_32 := 16#6b21310c#;
B~SCAY~1.ADS    125        u00087 : constant Version_32 := 16#ae3d0e1f#;
B~SCAY~1.ADS    126        u00088 : constant Version_32 := 16#9ae01713#;
B~SCAY~1.ADS    127        u00089 : constant Version_32 := 16#1ffd2714#;
B~SCAY~1.ADS    128        u00090 : constant Version_32 := 16#4b6a1cb0#;
B~SCAY~1.ADS    129        u00091 : constant Version_32 := 16#5fde144c#;
B~SCAY~1.ADS    130        u00092 : constant Version_32 := 16#f858504c#;
B~SCAY~1.ADS    131        u00093 : constant Version_32 := 16#9eef795c#;
B~SCAY~1.ADS    132        u00094 : constant Version_32 := 16#371c6472#;
B~SCAY~1.ADS    133        u00095 : constant Version_32 := 16#47a468aa#;
B~SCAY~1.ADS    134        u00096 : constant Version_32 := 16#dff1465b#;
B~SCAY~1.ADS    135        u00097 : constant Version_32 := 16#1e439027#;
B~SCAY~1.ADS    136        u00098 : constant Version_32 := 16#f3d435e7#;
B~SCAY~1.ADS    137        u00099 : constant Version_32 := 16#0d4a8bcc#;
B~SCAY~1.ADS    138        u00100 : constant Version_32 := 16#0f5e1135#;
B~SCAY~1.ADS    139        u00101 : constant Version_32 := 16#70f6a786#;
B~SCAY~1.ADS    140        u00102 : constant Version_32 := 16#de878898#;
B~SCAY~1.ADS    141        u00103 : constant Version_32 := 16#e9918401#;
B~SCAY~1.ADS    142        u00104 : constant Version_32 := 16#a859486f#;
B~SCAY~1.ADS    143        u00105 : constant Version_32 := 16#b380ca7b#;
B~SCAY~1.ADS    144        u00106 : constant Version_32 := 16#4d623223#;
B~SCAY~1.ADS    145        u00107 : constant Version_32 := 16#7f023943#;
B~SCAY~1.ADS    146        u00108 : constant Version_32 := 16#e4921f4c#;
B~SCAY~1.ADS    147        u00109 : constant Version_32 := 16#a4a04f1d#;
B~SCAY~1.ADS    148        u00110 : constant Version_32 := 16#c060f186#;
B~SCAY~1.ADS    149        u00111 : constant Version_32 := 16#26b46de2#;
B~SCAY~1.ADS    150        u00112 : constant Version_32 := 16#cfb745b6#;
B~SCAY~1.ADS    151        u00113 : constant Version_32 := 16#13f9205d#;
B~SCAY~1.ADS    152        u00114 : constant Version_32 := 16#a062bc12#;
B~SCAY~1.ADS    153        u00115 : constant Version_32 := 16#79429a33#;
B~SCAY~1.ADS    154        u00116 : constant Version_32 := 16#fcbceffd#;
B~SCAY~1.ADS    155        u00117 : constant Version_32 := 16#b8a9b98a#;
B~SCAY~1.ADS    156        u00118 : constant Version_32 := 16#c34049ca#;
B~SCAY~1.ADS    157        u00119 : constant Version_32 := 16#565aa463#;
B~SCAY~1.ADS    158        u00120 : constant Version_32 := 16#65332912#;
B~SCAY~1.ADS    159        u00121 : constant Version_32 := 16#9b5209d7#;
B~SCAY~1.ADS    160        u00122 : constant Version_32 := 16#077377b6#;
B~SCAY~1.ADS    161        u00123 : constant Version_32 := 16#bd99e035#;
B~SCAY~1.ADS    162        u00124 : constant Version_32 := 16#75a88560#;
B~SCAY~1.ADS    163        u00125 : constant Version_32 := 16#7c8c0316#;
B~SCAY~1.ADS    164        u00126 : constant Version_32 := 16#ec185bba#;
B~SCAY~1.ADS    165        u00127 : constant Version_32 := 16#780d9018#;
B~SCAY~1.ADS    166        u00128 : constant Version_32 := 16#f7ef1309#;
B~SCAY~1.ADS    167        u00129 : constant Version_32 := 16#a6bc3e7a#;
B~SCAY~1.ADS    168        u00130 : constant Version_32 := 16#5e7622e3#;
B~SCAY~1.ADS    169        u00131 : constant Version_32 := 16#8f9dc088#;
B~SCAY~1.ADS    170        u00132 : constant Version_32 := 16#03884a92#;
B~SCAY~1.ADS    171        u00133 : constant Version_32 := 16#023422b5#;
B~SCAY~1.ADS    172        u00134 : constant Version_32 := 16#efc59edc#;
B~SCAY~1.ADS    173        u00135 : constant Version_32 := 16#bb4340e1#;
B~SCAY~1.ADS    174        u00136 : constant Version_32 := 16#928bd3db#;
B~SCAY~1.ADS    175        u00137 : constant Version_32 := 16#dbf05b6f#;
B~SCAY~1.ADS    176        u00138 : constant Version_32 := 16#3ccb9ac9#;
B~SCAY~1.ADS    177        u00139 : constant Version_32 := 16#6e0011dc#;
B~SCAY~1.ADS    178        u00140 : constant Version_32 := 16#5430779e#;
B~SCAY~1.ADS    179        u00141 : constant Version_32 := 16#4329e186#;
B~SCAY~1.ADS    180        u00142 : constant Version_32 := 16#20b7b8e1#;
B~SCAY~1.ADS    181        u00143 : constant Version_32 := 16#a39188c0#;
B~SCAY~1.ADS    182        u00144 : constant Version_32 := 16#22fdb1b4#;
B~SCAY~1.ADS    183        u00145 : constant Version_32 := 16#7913d807#;
B~SCAY~1.ADS    184        u00146 : constant Version_32 := 16#f99afdb3#;
B~SCAY~1.ADS    185        u00147 : constant Version_32 := 16#fce07f61#;
B~SCAY~1.ADS    186        u00148 : constant Version_32 := 16#bfce4c7a#;
B~SCAY~1.ADS    187        u00149 : constant Version_32 := 16#2495f592#;
B~SCAY~1.ADS    188        u00150 : constant Version_32 := 16#d307a3ab#;
B~SCAY~1.ADS    189        u00151 : constant Version_32 := 16#95a6b8fb#;
B~SCAY~1.ADS    190        u00152 : constant Version_32 := 16#31cde6a7#;
B~SCAY~1.ADS    191        u00153 : constant Version_32 := 16#33a27de9#;
B~SCAY~1.ADS    192        u00154 : constant Version_32 := 16#2e40eb15#;
B~SCAY~1.ADS    193        u00155 : constant Version_32 := 16#531c2ece#;
B~SCAY~1.ADS    280        pragma Export (C, u00086, "ada__strings__maps__constantsS");
B~SCAY~1.ADS    420        -- ada.strings.maps.constants (spec)
CLI2.ADB        34        SCCS_ID : constant String := "@(#) command_line_interface.addisk21~/rschm/hasee/sccs/common_library, Version 1.2";
CLI2.ADB        57        Maximum_Command_Length : constant := 1024;
CLI2.ADS        69      max_args: constant := 255;
ERFILE.ADB      30        max_line_length : constant integer := 370;
ERFILE.ADB      59          with_string : constant string := "%WITH";
ERFILE.ADB      60          use_string  : constant string := "%USE";
ERFILE.ADB      61          init_string : constant string := "%INITIALIZE_ERROR_REPORT";
ERFILE.ADB      62          finish_string: constant string:= "%TERMINATE_ERROR_REPORT";
ERFILE.ADB      63          report_string: constant string:= "%REPORT_ERROR";
GOTOFILE.ADB    6         SCCS_ID : constant String := "@(#) goto_file.ada, Version 1.2";
GOTOFILE.ADB    10        Rcs_ID : constant String := "$Header: /dc/uc/self/arcadia/ayacc/src/RCS/goto_file.a,v 1.2 1993/05/31 22:36:35 self Exp self $";
GOTOFILE.ADB    34             Write_Line("    Goto_Matrix : constant Goto_Parse_Table :="); 
LALRSYM.ADB     49        SCCS_ID : constant String := "@(#) lalr_symbol_info_body.adadisk21~/rschm/hasee/sccs/ayacc, Version 1.2";
LALRSYM.ADB     70        SCCS_ID : constant String := "@(#) lalr_symbol_info_body.adadisk21~/rschm/hasee/sccs/ayacc, Version 1.2";
LALRSYM.ADB     212       SCCS_ID : constant String := "@(#) lalr_symbol_info_body.adadisk21~/rschm/hasee/sccs/ayacc, Version 1.2";
LALRSYM.ADB     287                     Infinity : constant Integer := Integer'Last; 
LEXER.ADB       48        SCCS_ID : constant String := "@(#) lexical_analyzer_body.adadisk21~/rschm/hasee/sccs/ayacc, Version 1.2";
LEXER.ADB       52        Rcs_ID : constant String := "$Header: lexical_analyzer_body.a,v 0.1 86/04/01 15:05:27 ada Exp $";
LEXER.ADB       54          Max_Lexeme_Length : constant := 80;
LR0MACH.ADB     48        SCCS_ID : constant String := "@(#) lr0_machine_body.ada, Version 1.2";
LR0MACH.ADB     98          First_State                     :  constant Parse_State := 0;
LR0MACH.ADB     331             First_Item: constant Item := (Rule_ID => First_Rule, Dot_Position => 0);
LR0MACH.ADB     410             return First_State; -- a constant;
LR0MACH.ADB     556             Last      : constant Item_Array_Index := 
LR0MACH.ADS     49          Null_Parse_State   :    constant Parse_State := -1;
OPTIONS.ADB     4         SCCS_ID : constant String := "@(#) options.ada, Version 1.2";
OPTIONS.ADB     8         Rcs_ID : constant String := "$Header: options.a,v 0.1 86/04/01 15:08:15 ada Exp $";
OUTFILE.ADB     63        SCCS_ID : constant String := "@(#) output_file_body.ada, Version 1.2";
OUTFILE.ADB     255             Put_Line (Outfile,"        DEBUG : constant boolean := " &
PARSER.ADB      59        SCCS_ID : constant String := "@(#) parser_body.ada, Version 1.2";
PARSETAB.ADB    53        SCCS_ID : constant String := "@(#) parse_table_body.ada, Version 1.2";
PARSETAB.ADB    57        Rcs_ID : constant String := "$Header: parse_table_body.a,v 0.1 86/04/01 15:08:38 ada Exp $";
PARSETAB.ADB    112         Error_Code    : constant := -6000;      -- generated parser must use these
PARSETAB.ADB    113         Accept_Code   : constant := -6001;
PARSETEM.ADB    58        SCCS_ID : constant String := "@(#) parse_template_file.ada, Version 1.2";
PARSETEM.ADB    62        Rcs_ID : constant String := "$Header: /dc/uc/self/arcadia/ayacc/src/RCS/parse_template_file.a,v 1.1 1993/01/15 23:39:54 self Exp self $";
PARSETEM.ADB    69        YYParse_Template_File : constant File_Data :=
PARSETEM.ADB    214          Create ("       stack_size : constant Natural := 300;"),
PARSETEM.ADB    220          Create ("       -- encryption constants"),
PARSETEM.ADB    221          Create ("       default           : constant := -1;"),
PARSETEM.ADB    222          Create ("       first_shift_entry : constant :=  0;"),
PARSETEM.ADB    223          Create ("       accept_code       : constant := -6001;"),
PARSETEM.ADB    224          Create ("       error_code        : constant := -6000;"),
PARSETEM.ADB    277          Create ("        default    : constant integer := -1;"),
PARSETEM.ADB    439          Create ("   input_stream_size : constant integer := 10;"),
PARSETEM.ADB    588          Create ("    max_forward_moves : constant integer := 5;"),
PARSETEM.ADB    602          Create ("      line_number_string : constant string :="),
PARSETEM.ADB    745          Create ("       shift_increment : constant integer := 20;"),
PARSETEM.ADB    747          Create ("       reduce_increment : constant integer := 10;"),
PARSETEM.ADB    1004         Create ("      min_ok_score : constant integer := 70;       -- will rellluctantly use"),
PARSETEM.ADB    1005         Create ("      stop_score   : constant integer := 100;      -- this or higher is best."),
PARSETEM.ADB    1303          Next_Line : constant String  :=
PARSETEM.ADS    46          Eof : constant Character := Ascii.Nul;
RAGGED.ADB      6         SCCS_ID : constant String := "@(#) ragged.ada, Version 1.2";
RULETAB.ADB     46        SCCS_ID : constant String := "@(#) rule_table_body.ada, Version 1.2";
RULETAB.ADB     50        Rcs_ID : constant String := "$Header: rule_table_body.a,v 0.1 86/04/01 15:11:44 ada Exp $";
RULETAB.ADS     50          Max_Rules  : constant := 1_999;       -- An arbitrary upper bound.
SCAYACC.ADB     78          Rcs_ID : constant String := "$Header: /cf/ua/arcadia/alex-ayacc/ayacc/src/RCS/ayacc.a,v 1.1 88/08/08 12:07:07 arcadia Exp $";
SCAYACC.ADB     80          copyright : constant string :=
SCAYACC.ADB     82          copyright2 : constant string :=
SCAYACCG.ADB    31        Max_Parameters : constant := 7;
SETPACK.ADB     46        SCCS_ID : constant String := "@(#) set_pack_body.ada, Version 1.2";
SETPACK.ADB     50        Rcs_ID : constant String := "$Header: set_pack_body.a,v 0.1 86/04/01 15:11:59 ada Exp $";
SOURCEFI.ADB    53        SCCS_ID : constant String := "@(#) source_file_body.ada, Version 1.2";
SOURCEFI.ADB    57        Rcs_ID : constant String := "$Header: /cf/ua/arcadia/alex-ayacc/ayacc/src/RCS/source_file_body.a,v 1.1 88/08/08 14:29:03 arcadia Exp $";
SOURCEFI.ADB    61          Max_Line_Length : constant := 260;
SOURCEFI.ADS    71          Eof  : constant Character := Ascii.Nul;
SOURCEFI.ADS    72          Eoln : constant Character := Ascii.Lf;
SRFILE.ADB      6         SCCS_ID : constant String := "@(#) shift_reduce_file.ada, Version 1.2";
SRFILE.ADB      10        Rcs_ID : constant String := "$Header: /dc/uc/self/arcadia/ayacc/src/RCS/shift_reduce_file.a,v 1.2 1993/05/31 22:36:35 self Exp self $";
SRFILE.ADB      34              Write_Line("    Shift_Reduce_Matrix : constant Shift_Reduce_Array :=");
STACKPAC.ADB    5         SCCS_ID : constant String := "@(#) stack.ada, Version 1.2";
STACKPKG.ADB    18        SCCS_ID : constant String := "@(#) stack_pkg.ada, Version 1.2";
STRINGPK.ADB    19        SCCS_ID : constant String := "@(#) string_pkg.ada, Version 1.2";
STRINGPK.ADS    578           --| Abstract data type, string_type, is a constant sequence of chars
STRINGSC.ADB    13        SCCS_ID : constant String := "@(#) string_scanner.ada, Version 1.2";
STRINGSC.ADB    18      White_Space   : constant string := " " & ASCII.HT;
STRINGSC.ADB    19      Number_1      : constant string := "0123456789";
STRINGSC.ADB    20      Number        : constant string := Number_1 & "_";
STRINGSC.ADB    21      Quote         : constant string := """";
STRINGSC.ADB    22      Ada_Id_1      : constant string := "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
STRINGSC.ADB    23      Ada_Id        : constant string := Ada_Id_1 & Number;
STRPACK.ADB     5         SCCS_ID : constant String := "@(#) str_pack.ada, Version 1.2";
STRPACK.ADB     9         Rcs_ID : constant String := "$Header: str_pack.a,v 0.1 86/04/01 15:13:01 ada Exp $";
STRPACK.ADS     49          Maximum : constant := 1024;  --RJS 120;
SYMINFO.ADB     48        SCCS_ID : constant String := "@(#) symbol_info_body.ada, Version 1.2";
SYMINFO.ADB     52        Rcs_ID : constant String := "$Header: symbol_info_body.a,v 0.1 86/04/01 15:13:25 ada Exp $";
SYMTAB.ADB      46        SCCS_ID : constant String := "@(#) symbol_table_body.ada, Version 1.2";
SYMTAB.ADB      73          Hash_Table_Size : constant := 613;    -- A large prime number
SYMTAB.ADB      86          Block_Size : constant Grammar_Symbol := 1500;
TOKFILE.ADB     61        SCCS_ID : constant String := "@(#) tokens_file_body.ada, Version 1.2";
TOKFILE.ADB     65        Rcs_ID : constant String := "$Header: /dc/uc/self/arcadia/ayacc/src/RCS/tokens_file_body.a,v 1.2 1993/05/31 22:36:35 self Exp self $";
TOKFILE.ADB     197             Put_Line(The_Ada_File, "    Literals : constant Table := Table'("); 
VERBFILE.ADB    54        SCCS_ID : constant String := "@(#) verbose_file_body.ada, Version 1.2";
VERBFILE.ADB    58        Rcs_ID : constant String := "$Header: /cf/ua/arcadia/alex-ayacc/ayacc/src/RCS/verbose_file_body.a,v 1.1 88/08/08 14:44:42 arcadia Exp $";
